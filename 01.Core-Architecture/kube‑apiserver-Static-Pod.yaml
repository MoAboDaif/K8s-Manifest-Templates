apiVersion: v1
kind: Pod
metadata:
  name: kube-apiserver-{{node_name}}
  namespace: kube-system
  labels:
    component: kube-apiserver
    tier: control-plane
spec:
  hostNetwork: true
  priorityClassName: system-node-critical
  containers:
  - name: kube-apiserver
    image: k8s.gcr.io/kube-apiserver:{{k8s_version}}
    command:
      - kube-apiserver
      - --advertise-address={{advertise_address}}
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/etc/kubernetes/pki/ca.crt
      - --enable-admission-plugins=NodeRestriction,PodSecurityPolicy
      - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt
      - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt
      - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key
      - --etcd-servers=https://{{etcd_endpoint}}:2379
      - --insecure-port=0
      - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt
      - --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key
      - --runtime-config=api/all=true
      - --service-account-key-file=/etc/kubernetes/pki/sa.pub
      - --service-cluster-ip-range={{service_cluster_ip_range}}
      - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt
      - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key
      - --audit-log-path=/var/log/kube-audit.log
      - --audit-policy-file=/etc/kubernetes/audit-policy.yaml
    ports:
    - containerPort: 6443
    volumeMounts:
    - name: certs
      mountPath: /etc/kubernetes/pki
      readOnly: true
    - name: config
      mountPath: /etc/kubernetes/config
  volumes:
  - name: certs
    hostPath:
      path: /etc/kubernetes/pki
  - name: config
    hostPath:
      path: /etc/kubernetes/config